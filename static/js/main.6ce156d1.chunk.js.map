{"version":3,"sources":["components/Table.js","components/User.js","App.js","index.js"],"names":["columns","Header","Cell","id","row","original","to","src","alt","accessor","name","address","city","street","suite","Table","users","React","useState","company","setCompany","tableData","setTableData","tableInstanse","useTable","data","initialState","pageIndex","pageSize","useSortBy","usePagination","useEffect","options","reduce","arr","user","map","value","label","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","className","hideSelectedOptions","isMulti","onChange","e","length","checkedCompanyList","elem","filteredUsers","filter","includes","clearValue","console","log","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","getRowProps","cells","cell","getCellProps","onClick","disabled","type","defaultValue","target","Number","style","width","User","props","userInfo","setUserInfo","userTasks","setUserTasks","isLoading","setIsLoading","taskIsLoading","setTaskIsLoading","error","setError","taskError","setTaskError","useParams","axios","get","then","catch","messsage","phone","email","username","website","ListGroup","as","Item","active","title","completed","Card","marginBottom","variant","checked","App","setUsers","sortingUsers","sort","a","b","exact","path","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6ce156d1.chunk.js","sourcesContent":["import React from 'react';\r\nimport Select from 'react-select';\r\nimport { useTable, usePagination, useSortBy } from 'react-table';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst avatarURL = 'https://via.placeholder.com/120x180';\r\n\r\nconst columns = [\r\n    {\r\n        Header: 'Avatar',\r\n        Cell: ({\r\n            row: {\r\n                original: { id },\r\n            },\r\n        }) => (\r\n            <div>\r\n                <Link to={`/user/${id}`}>\r\n                    <img src={avatarURL} alt=\"avatar\" />\r\n                </Link>\r\n            </div>\r\n        ),\r\n    },\r\n    {\r\n        Header: 'Name',\r\n        accessor: 'name',\r\n        Cell: ({\r\n            row: {\r\n                original: { id, name },\r\n            },\r\n        }) => (\r\n            <div>\r\n                <Link to={`/user/${id}`}>{name}</Link>\r\n            </div>\r\n        ),\r\n    },\r\n    {\r\n        Header: 'UserName',\r\n        accessor: 'username',\r\n    },\r\n    {\r\n        Header: 'Email',\r\n        accessor: 'email',\r\n    },\r\n    {\r\n        Header: 'Address',\r\n        accessor: ({ address }) => address.city,\r\n        Cell: ({\r\n            row: {\r\n                original: {\r\n                    address: { street, city, suite },\r\n                },\r\n            },\r\n        }) => {\r\n            return (\r\n                <div>\r\n                    {city}, {street}, {suite}\r\n                </div>\r\n            );\r\n        },\r\n    },\r\n];\r\n\r\nfunction Table({ users }) {\r\n    const [company, setCompany] = React.useState({});\r\n    const [tableData, setTableData] = React.useState(users);\r\n\r\n    const tableInstanse = useTable(\r\n        {\r\n            columns: columns,\r\n            data: tableData,\r\n            initialState: { pageIndex: 0, pageSize: 3 },\r\n        },\r\n        useSortBy,\r\n        usePagination,\r\n    );\r\n\r\n    React.useEffect(() => {\r\n        const companyOptions = users.reduce((arr, user) => {\r\n            return [...arr, user.company.name];\r\n        }, []);\r\n\r\n        const options = companyOptions.map((company) => ({\r\n            value: company,\r\n            label: company,\r\n        }));\r\n\r\n        setCompany(options);\r\n    }, [users]);\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        prepareRow,\r\n        page,\r\n        canPreviousPage,\r\n        canNextPage,\r\n        pageOptions,\r\n        pageCount,\r\n        gotoPage,\r\n        nextPage,\r\n        previousPage,\r\n        setPageSize,\r\n        state: { pageIndex, pageSize },\r\n    } = tableInstanse;\r\n\r\n    const companyUpdate = (e) => {\r\n        if (!e.length) {\r\n            setTableData(() => users);\r\n        } else {\r\n            const checkedCompanyList = e.map((elem) => elem.value);\r\n            const filteredUsers = users.filter((user) =>\r\n                checkedCompanyList.includes(user.company.name),\r\n            );\r\n            setTableData(() => filteredUsers);\r\n        }\r\n    };\r\n\r\n    const companyClear = (e) => {\r\n        console.log(e);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"filters\">\r\n                <div className=\"singleFilter\">\r\n                    <h2>Choise company</h2>\r\n                    <Select\r\n                        hideSelectedOptions\r\n                        isMulti\r\n                        options={company}\r\n                        onChange={companyUpdate}\r\n                        clearValue={companyClear}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"singleFilter\"></div>\r\n            </div>\r\n            <div className=\"tableContainer\">\r\n                <table {...getTableProps()} className=\"table\">\r\n                    <thead>\r\n                        {headerGroups.map((headerGroup) => (\r\n                            <tr {...headerGroup.getHeaderGroupProps()}>\r\n                                {headerGroup.headers.map((column) => (\r\n                                    <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                                        {column.render('Header')}\r\n                                    </th>\r\n                                ))}\r\n                            </tr>\r\n                        ))}\r\n                    </thead>\r\n\r\n                    <tbody {...getTableBodyProps()}>\r\n                        {page.map((row) => {\r\n                            prepareRow(row);\r\n\r\n                            return (\r\n                                <tr {...row.getRowProps()}>\r\n                                    {row.cells.map((cell) => {\r\n                                        return (\r\n                                            <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                                        );\r\n                                    })}\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <div className=\"pagination\">\r\n                <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n                    {'<<'}\r\n                </button>{' '}\r\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                    {'<'}\r\n                </button>{' '}\r\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n                    {'>'}\r\n                </button>{' '}\r\n                <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n                    {'>>'}\r\n                </button>{' '}\r\n                <span>\r\n                    Page{' '}\r\n                    <strong>\r\n                        {pageIndex + 1} of {pageOptions.length}\r\n                    </strong>{' '}\r\n                </span>\r\n                <span>\r\n                    | Go to page:{' '}\r\n                    <input\r\n                        type=\"number\"\r\n                        defaultValue={pageIndex + 1}\r\n                        onChange={(e) => {\r\n                            const page = e.target.value ? Number(e.target.value) - 1 : 0;\r\n                            gotoPage(page);\r\n                        }}\r\n                        style={{ width: '100px' }}\r\n                    />\r\n                </span>{' '}\r\n                <select\r\n                    value={pageSize}\r\n                    onChange={(e) => {\r\n                        setPageSize(Number(e.target.value));\r\n                    }}>\r\n                    {[3, 5, 10].map((pageSize) => (\r\n                        <option key={pageSize} value={pageSize}>\r\n                            Show {pageSize}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Table;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nfunction User(props) {\r\n    const [userInfo, setUserInfo] = React.useState([]);\r\n    const [userTasks, setUserTasks] = React.useState([]);\r\n    const [isLoading, setIsLoading] = React.useState(true);\r\n    const [taskIsLoading, setTaskIsLoading] = React.useState(true);\r\n    const [error, setError] = React.useState('');\r\n    const [taskError, setTaskError] = React.useState('');\r\n\r\n    const { id } = useParams();\r\n\r\n    React.useEffect(() => {\r\n        axios\r\n            .get(`https://jsonplaceholder.typicode.com/users?id=${id}`)\r\n            .then(({ data }) => {\r\n                setUserInfo(data);\r\n                setIsLoading(false);\r\n            })\r\n            .catch((e) => setError(e.messsage));\r\n    }, [id]);\r\n\r\n    React.useEffect(() => {\r\n        axios\r\n            .get(`https://jsonplaceholder.typicode.com/todos?userId=${id}`)\r\n            .then(({ data }) => {\r\n                setUserTasks(data);\r\n                setTaskIsLoading(false);\r\n            })\r\n            .catch((e) => setTaskError(e.messsage));\r\n    }, [id]);\r\n\r\n    return (\r\n        <>\r\n            <Link to=\"/\">Go to main</Link>\r\n            {isLoading === true && <div className=\"lds-dual-ring\"></div>}\r\n            {error.length > 0 && (\r\n                <div>\r\n                    <Link to=\"/\">\r\n                        <button>Go to main Paig</button>\r\n                    </Link>\r\n                </div>\r\n            )}\r\n            {userInfo.length > 0 &&\r\n                userInfo.map(({ name, phone, email, username, website, company, address }) => (\r\n                    <>\r\n                        <h1>{name}</h1>\r\n                        <ListGroup as=\"ul\">\r\n                            <ListGroup.Item as=\"li\" active>\r\n                                UserData\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <b>User name:</b> {username}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <b>Tel:</b> {phone}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <b>Email:</b> {email}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <b>WebSite:</b> {website}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <b>Company:</b> {company.name}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <b>Address:</b> {address.city}, {address.street}, {address.suite}\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n\r\n                        <h2>User Tasks</h2>\r\n                        {taskIsLoading === true && <div className=\"lds-dual-ring\"></div>}\r\n                        {taskError.length > 0 && <div>problem with download task</div>}\r\n                        {userTasks.length > 0 && (\r\n                            <div className=\"todos\">\r\n                                {userTasks.map(({ id, title, completed }) => (\r\n                                    <Card style={{ width: '30%', marginBottom: '20px' }}>\r\n                                        <Card.Header>Task ID: {id}</Card.Header>\r\n                                        <ListGroup variant=\"flush\">\r\n                                            <ListGroup.Item>\r\n                                                <span className=\"taskBlock\">Task name: </span>\r\n                                                {title}\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <span className=\"taskBlock\">Completed: </span>\r\n                                                <input\r\n                                                    type=\"checkbox\"\r\n                                                    disabled\r\n                                                    checked={completed}\r\n                                                />\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Card>\r\n                                ))}\r\n                            </div>\r\n                        )}\r\n                    </>\r\n                ))}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default User;\r\n","import React from 'react';\nimport axios from 'axios';\nimport Table from './components/Table';\nimport User from './components/User';\nimport { Route } from 'react-router-dom';\n\nconst serverURL = 'https://jsonplaceholder.typicode.com/users';\n\nfunction App() {\n    const [users, setUsers] = React.useState([]);\n    const [isLoading, setIsLoading] = React.useState(true);\n    const [error, setError] = React.useState('');\n\n    React.useEffect(() => {\n        axios\n            .get(serverURL)\n            .then(({ data }) => {\n                const sortingUsers = data.sort((a, b) => {\n                    if (a.name < b.name) return -1;\n                    if (a.name > b.name) return 1;\n                    return 0;\n                });\n\n                setUsers(sortingUsers);\n                setIsLoading(false);\n            })\n            .catch((e) => setError(e.messsage));\n    }, []);\n\n    return (\n        <div className=\"wrapper\">\n            <Route exact path=\"/\">\n                <h1>Users</h1>\n                {isLoading === true && <div className=\"lds-dual-ring\"></div>}\n                {error.length > 0 && <div>{error}</div>}\n                {users.length > 0 && <Table users={users} />}\n            </Route>\n\n            <Route path=\"/user/:id\" component={User} />\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}